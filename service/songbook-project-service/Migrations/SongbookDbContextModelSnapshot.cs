// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using songbook_project_service.Context;

namespace songbook_project_service.Migrations
{
    [DbContext(typeof(SongbookDbContext))]
    partial class SongbookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("songbook_project_service.Context.SongMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist");

                    b.Property<int?>("DefaultSongVersionId");

                    b.Property<int?>("TitleId");

                    b.HasKey("Id");

                    b.HasIndex("DefaultSongVersionId");

                    b.HasIndex("TitleId");

                    b.ToTable("SongMetadatas");
                });

            modelBuilder.Entity("songbook_project_service.Context.SongVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SongMetadataId");

                    b.Property<int?>("TextId");

                    b.Property<int?>("VersionNameId");

                    b.HasKey("Id");

                    b.HasIndex("SongMetadataId");

                    b.HasIndex("TextId");

                    b.HasIndex("VersionNameId");

                    b.ToTable("SongVersions");
                });

            modelBuilder.Entity("songbook_project_service.Context.TextAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TextEn");

                    b.Property<string>("TextPl");

                    b.HasKey("Id");

                    b.ToTable("TextAssets");
                });

            modelBuilder.Entity("songbook_project_service.Context.SongMetadata", b =>
                {
                    b.HasOne("songbook_project_service.Context.SongVersion", "DefaultSongVersion")
                        .WithMany()
                        .HasForeignKey("DefaultSongVersionId");

                    b.HasOne("songbook_project_service.Context.TextAsset", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId");
                });

            modelBuilder.Entity("songbook_project_service.Context.SongVersion", b =>
                {
                    b.HasOne("songbook_project_service.Context.SongMetadata")
                        .WithMany("SongVersions")
                        .HasForeignKey("SongMetadataId");

                    b.HasOne("songbook_project_service.Context.TextAsset", "Text")
                        .WithMany()
                        .HasForeignKey("TextId");

                    b.HasOne("songbook_project_service.Context.TextAsset", "VersionName")
                        .WithMany()
                        .HasForeignKey("VersionNameId");
                });
#pragma warning restore 612, 618
        }
    }
}
